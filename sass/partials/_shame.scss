
/** @define utilities */

/* Applies to flex container
   ========================================================================== */

/**
 * Container
 */

.u-flex {
  display: flex !important;
}

.u-flexInline {
  display: inline-flex !important;
}

/**
 * Direction: row
 */

.u-flexRow {
  flex-direction: row !important;
}

.u-flexRowReverse {
  flex-direction: row-reverse !important;
}

/**
 * Direction: column
 */

.u-flexCol {
  flex-direction: column !important;
}

.u-flexColReverse {
  flex-direction: column-reverse !important;
}

/**
 * Wrap
 */

.u-flexWrap {
  flex-wrap: wrap !important;
}

.u-flexNoWrap {
  flex-wrap: nowrap !important;
}

.u-flexWrapReverse {
  flex-wrap: wrap-reverse !important;
}

/**
 * Align items along the main axis of the current line of the flex container
 */

.u-flexJustifyStart {
  justify-content: flex-start !important;
}

.u-flexJustifyEnd {
  justify-content: flex-end !important;
}

.u-flexJustifyCenter {
  justify-content: center !important;
}

.u-flexJustifyBetween {
  justify-content: space-between !important;
}

.u-flexJustifyAround {
  justify-content: space-around !important;
}

/**
 * Align items in the cross axis of the current line of the flex container
 * Similar to `justify-content` but in the perpendicular direction
 */

.u-flexAlignItemsStart {
  align-items: flex-start !important;
}

.u-flexAlignItemsEnd {
  align-items: flex-end !important;
}

.u-flexAlignItemsCenter {
  align-items: center !important;
}

.u-flexAlignItemsStretch {
  align-items: stretch !important;
}

.u-flexAlignItemsBaseline {
  align-items: baseline !important;
}

/**
 * Aligns items within the flex container when there is extra
 * space in the cross-axis
 *
 * Has no effect when there is only one line of flex items.
 */

.u-flexAlignContentStart {
  align-content: flex-start !important;
}

.u-flexAlignContentEnd {
  align-content: flex-end !important;
}

.u-flexAlignContentCenter {
  align-content: center !important;
}

.u-flexAlignContentStretch {
  align-content: stretch !important;
}

.u-flexAlignContentBetween {
  align-content: space-between !important;
}

.u-flexAlignContentAround {
  align-content: space-around !important;
}

/* Applies to flex items
   ========================================================================== */

/**
 * Override default alignment of single item when specified by `align-items`
 */

.u-flexAlignSelfStart {
  align-self: flex-start !important;
}

.u-flexAlignSelfEnd {
  align-self: flex-end !important;
}

.u-flexAlignSelfCenter {
  align-self: center !important;
}

.u-flexAlignSelfStretch {
  align-self: stretch !important;
}

.u-flexAlignSelfBaseline {
  align-self: baseline !important;
}

.u-flexAlignSelfAuto {
  align-self: auto !important;
}

/**
 * Change order without editing underlying HTML
 */

.u-flexOrderFirst {
  order: -1 !important;
}

.u-flexOrderLast {
  order: 1 !important;
}

.u-flexOrderNone {
  order: 0 !important;
}

/**
 * Specify the flex grow factor, which determines how much the flex item will
 * grow relative to the rest of the flex items in the flex container.
 *
 * Supports 1-5 proportions
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex
 *    - http://git.io/vllC7
 *
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis. Using this
 *    instead of `auto` as this matches what the default would be with `flex`
 *    shorthand - http://git.io/vllWx
 */

.u-flexGrow1 {
  flex: 1 1 0% !important; /* 1 */
}

.u-flexGrow2 {
  flex: 2 1 0% !important;
}

.u-flexGrow3 {
  flex: 3 1 0% !important;
}

.u-flexGrow4 {
  flex: 4 1 0% !important;
}

.u-flexGrow5 {
  flex: 5 1 0% !important;
}

/**
 * Specify the flex shrink factor, which determines how much the flex item will
 * shrink relative to the rest of the flex items in the flex container.
 */

.u-flexShrink0 {
  flex-shrink: 0 !important;
}

.u-flexShrink1 {
  flex-shrink: 1 !important;
}

.u-flexShrink2 {
  flex-shrink: 2 !important;
}

.u-flexShrink3 {
  flex-shrink: 3 !important;
}

.u-flexShrink4 {
  flex-shrink: 4 !important;
}

.u-flexShrink5 {
  flex-shrink: 5 !important;
}

/**
 * Aligning with `auto` margins
 * http://www.w3.org/TR/css-flexbox-1/#auto-margins
 */

.u-flexExpand {
  margin: auto !important;
}

.u-flexExpandLeft {
  margin-left: auto !important;
}

.u-flexExpandRight {
  margin-right: auto !important;
}

.u-flexExpandTop {
  margin-top: auto !important;
}

.u-flexExpandBottom {
  margin-bottom: auto !important;
}

/**
 * Basis
 */

.u-flexBasisAuto {
  flex-basis: auto !important;
}

.u-flexBasis0 {
  flex-basis: 0 !important;
}

/*
 * Shorthand
 *
 * Declares all values instead of keywords like 'initial' to work around IE10
 * https://www.w3.org/TR/css-flexbox-1/#flex-common
 *
 * 1. Fixes issue in IE 10 where flex-basis is ignored - https://git.io/vllMt
 *    This ensures it overrides flex-basis set in other utilities.
 */

/*
 * Sizes the item based on the width/height properties
 */

.u-flexInitial {
  flex: 0 1 auto !important;
  flex-basis: auto !important; /* 1 */
}

/*
 * Sizes the item based on the width/height properties, but makes them fully
 * flexible, so that they absorb any free space along the main axis.
 */

.u-flexAuto {
  flex: 1 1 auto !important;
  flex-basis: auto !important; /* 1 */
}

/*
 * Sizes the item according to the width/height properties, but makes the flex
 * item fully inflexible. Similar to initial, except that flex items are
 * not allowed to shrink, even in overflow situations.
 */

.u-flexNone {
  flex: 0 0 auto !important;
  flex-basis: auto !important; /* 1 */
}

/**
 * @define utilities
 * Size: breakpoint 1 (small)
 */

@media (min-width: 320px) {

  /* Applies to flex container
     ======================================================================== */

  /**
   * Container
   */

  .u-sm-flex {
    display: flex !important;
  }

  .u-sm-flexInline {
    display: inline-flex !important;
  }

  /**
   * Direction: row
   */

  .u-sm-flexRow {
    flex-direction: row !important;
  }

  .u-sm-flexRowReverse {
    flex-direction: row-reverse !important;
  }

  /**
   * Direction: column
   */

  .u-sm-flexCol {
    flex-direction: column !important;
  }

  .u-sm-flexColReverse {
    flex-direction: column-reverse !important;
  }

  /**
   * Wrap
   */

  .u-sm-flexWrap {
    flex-wrap: wrap !important;
  }

  .u-sm-flexNoWrap {
    flex-wrap: nowrap !important;
  }

  .u-sm-flexWrapReverse {
    flex-wrap: wrap-reverse !important;
  }

  /**
   * Align items along the main axis of the current line of the flex container
   */

  .u-sm-flexJustifyStart {
    justify-content: flex-start !important;
  }

  .u-sm-flexJustifyEnd {
    justify-content: flex-end !important;
  }

  .u-sm-flexJustifyCenter {
    justify-content: center !important;
  }

  .u-sm-flexJustifyBetween {
    justify-content: space-between !important;
  }

  .u-sm-flexJustifyAround {
    justify-content: space-around !important;
  }

  /**
   * Align items in the cross axis of the current line of the flex container
   * Similar to `justify-content` but in the perpendicular direction
   */

  .u-sm-flexAlignItemsStart {
    align-items: flex-start !important;
  }

  .u-sm-flexAlignItemsEnd {
    align-items: flex-end !important;
  }

  .u-sm-flexAlignItemsCenter {
    align-items: center !important;
  }

  .u-sm-flexAlignItemsStretch {
    align-items: stretch !important;
  }

  .u-sm-flexAlignItemsBaseline {
    align-items: baseline !important;
  }

  /**
   * Aligns items within the flex container when there is extra
   * space in the cross-axis
   *
   * Has no effect when there is only one line of flex items.
   */

  .u-sm-flexAlignContentStart {
    align-content: flex-start !important;
  }

  .u-sm-flexAlignContentEnd {
    align-content: flex-end !important;
  }

  .u-sm-flexAlignContentCenter {
    align-content: center !important;
  }

  .u-sm-flexAlignContentStretch {
    align-content: stretch !important;
  }

  .u-sm-flexAlignContentBetween {
    align-content: space-between !important;
  }

  .u-sm-flexAlignContentAround {
    align-content: space-around !important;
  }

  /* Applies to flex items
     ======================================================================== */

  /**
   * Override default alignment of single item when specified by `align-items`
   */

  .u-sm-flexAlignSelfStart {
    align-self: flex-start !important;
  }

  .u-sm-flexAlignSelfEnd {
    align-self: flex-end !important;
  }

  .u-sm-flexAlignSelfCenter {
    align-self: center !important;
  }

  .u-sm-flexAlignSelfStretch {
    align-self: stretch !important;
  }

  .u-sm-flexAlignSelfBaseline {
    align-self: baseline !important;
  }

  .u-sm-flexAlignSelfAuto {
    align-self: auto !important;
  }

  /**
   * Change order without editing underlying HTML
   */

  .u-sm-flexOrderFirst {
    order: -1 !important;
  }

  .u-sm-flexOrderLast {
    order: 1 !important;
  }

  .u-sm-flexOrderNone {
    order: 0 !important;
  }

  /**
   * Specify the flex grow factor, which determines how much the flex item will
   * grow relative to the rest of the flex items in the flex container.
   *
   * Supports 1-5 proportions
   *
   * 1. Provide all values to avoid IE10 bug with shorthand flex
   *    http://git.io/vllC7
   *
   *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
   *    http://git.io/vllWx
   */

  .u-sm-flexGrow1 {
    flex: 1 1 0% !important; /* 1 */
  }

  .u-sm-flexGrow2 {
    flex: 2 1 0% !important;
  }

  .u-sm-flexGrow3 {
    flex: 3 1 0% !important;
  }

  .u-sm-flexGrow4 {
    flex: 4 1 0% !important;
  }

  .u-sm-flexGrow5 {
    flex: 5 1 0% !important;
  }

  /**
   * Specify the flex shrink factor, which determines how much the flex item
   * will shrink relative to the rest of the flex items in the flex container.
   */

  .u-sm-flexShrink0 {
    flex-shrink: 0 !important;
  }

  .u-sm-flexShrink1 {
    flex-shrink: 1 !important;
  }

  .u-sm-flexShrink2 {
    flex-shrink: 2 !important;
  }

  .u-sm-flexShrink3 {
    flex-shrink: 3 !important;
  }

  .u-sm-flexShrink4 {
    flex-shrink: 4 !important;
  }

  .u-sm-flexShrink5 {
    flex-shrink: 5 !important;
  }

  /**
   * Aligning with `auto` margins
   * http://www.w3.org/TR/css-flexbox-1/#auto-margins
   */

  .u-sm-flexExpand {
    margin: auto !important;
  }

  .u-sm-flexExpandLeft {
    margin-left: auto !important;
  }

  .u-sm-flexExpandRight {
    margin-right: auto !important;
  }

  .u-sm-flexExpandTop {
    margin-top: auto !important;
  }

  .u-sm-flexExpandBottom {
    margin-bottom: auto !important;
  }

  /**
   * Basis
   */

  .u-sm-flexBasisAuto {
    flex-basis: auto !important;
  }

  .u-sm-flexBasis0 {
    flex-basis: 0 !important;
  }

  /*
   * Shorthand
   *
   * Declares all values instead of keywords like 'initial' to work around IE10
   * https://www.w3.org/TR/css-flexbox-1/#flex-common
   *
   * 1. Fixes issue in IE 10 where flex-basis is ignored - https://git.io/vllMt
   *    This ensures it overrides flex-basis set in other utilities.
   */

  /*
   * Sizes the item based on the width/height properties
   */

  .u-sm-flexInitial {
    flex: 0 1 auto !important;
    flex-basis: auto !important; /* 1 */
  }

  /*
   * Sizes the item based on the width/height properties, but makes them fully
   * flexible, so that they absorb any free space along the main axis.
   */

  .u-sm-flexAuto {
    flex: 1 1 auto !important;
    flex-basis: auto !important; /* 1 */
  }

  /*
   * Sizes the item according to the width/height properties, but makes the flex
   * item fully inflexible. Similar to initial, except that flex items are
   * not allowed to shrink, even in overflow situations.
   */

  .u-sm-flexNone {
    flex: 0 0 auto !important;
    flex-basis: auto !important; /* 1 */
  }

}

/**
 * @define utilities
 * Size: breakpoint 2 (medium)
 */

@media (min-width: 768px) {

  /* Applies to flex container
     ======================================================================== */

  /**
   * Container
   */

  .u-md-flex {
    display: flex !important;
  }

  .u-md-flexInline {
    display: inline-flex !important;
  }

  /**
   * Direction: row
   */

  .u-md-flexRow {
    flex-direction: row !important;
  }

  .u-md-flexRowReverse {
    flex-direction: row-reverse !important;
  }

  /**
   * Direction: column
   */

  .u-md-flexCol {
    flex-direction: column !important;
  }

  .u-md-flexColReverse {
    flex-direction: column-reverse !important;
  }

  /**
   * Wrap
   */

  .u-md-flexWrap {
    flex-wrap: wrap !important;
  }

  .u-md-flexNoWrap {
    flex-wrap: nowrap !important;
  }

  .u-md-flexWrapReverse {
    flex-wrap: wrap-reverse !important;
  }

  /**
   * Align items along the main axis of the current line of the flex container
   */

  .u-md-flexJustifyStart {
    justify-content: flex-start !important;
  }

  .u-md-flexJustifyEnd {
    justify-content: flex-end !important;
  }

  .u-md-flexJustifyCenter {
    justify-content: center !important;
  }

  .u-md-flexJustifyBetween {
    justify-content: space-between !important;
  }

  .u-md-flexJustifyAround {
    justify-content: space-around !important;
  }

  /**
   * Align items in the cross axis of the current line of the flex container
   * Similar to `justify-content` but in the perpendicular direction
   */

  .u-md-flexAlignItemsStart {
    align-items: flex-start !important;
  }

  .u-md-flexAlignItemsEnd {
    align-items: flex-end !important;
  }

  .u-md-flexAlignItemsCenter {
    align-items: center !important;
  }

  .u-md-flexAlignItemsStretch {
    align-items: stretch !important;
  }

  .u-md-flexAlignItemsBaseline {
    align-items: baseline !important;
  }

  /**
   * Aligns items within the flex container when there is extra
   * space in the cross-axis
   *
   * Has no effect when there is only one line of flex items.
   */

  .u-md-flexAlignContentStart {
    align-content: flex-start !important;
  }

  .u-md-flexAlignContentEnd {
    align-content: flex-end !important;
  }

  .u-md-flexAlignContentCenter {
    align-content: center !important;
  }

  .u-md-flexAlignContentStretch {
    align-content: stretch !important;
  }

  .u-md-flexAlignContentBetween {
    align-content: space-between !important;
  }

  .u-md-flexAlignContentAround {
    align-content: space-around !important;
  }

  /* Applies to flex items
     ======================================================================== */

  /**
   * Override default alignment of single item when specified by `align-items`
   */

  .u-md-flexAlignSelfStart {
    align-self: flex-start !important;
  }

  .u-md-flexAlignSelfEnd {
    align-self: flex-end !important;
  }

  .u-md-flexAlignSelfCenter {
    align-self: center !important;
  }

  .u-md-flexAlignSelfStretch {
    align-self: stretch !important;
  }

  .u-md-flexAlignSelfBaseline {
    align-self: baseline !important;
  }

  .u-md-flexAlignSelfAuto {
    align-self: auto !important;
  }

  /**
   * Change order without editing underlying HTML
   */

  .u-md-flexOrderFirst {
    order: -1 !important;
  }

  .u-md-flexOrderLast {
    order: 1 !important;
  }

  .u-md-flexOrderNone {
    order: 0 !important;
  }

  /**
   * Specify the flex grow factor, which determines how much the flex item will
   * grow relative to the rest of the flex items in the flex container.
   *
   * Supports 1-5 proportions
   *
   * 1. Provide all values to avoid IE10 bug with shorthand flex
   *    http://git.io/vllC7
   *
   *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
   *    http://git.io/vllWx
   */

  .u-md-flexGrow1 {
    flex: 1 1 0% !important; /* 1 */
  }

  .u-md-flexGrow2 {
    flex: 2 1 0% !important;
  }

  .u-md-flexGrow3 {
    flex: 3 1 0% !important;
  }

  .u-md-flexGrow4 {
    flex: 4 1 0% !important;
  }

  .u-md-flexGrow5 {
    flex: 5 1 0% !important;
  }

  /**
   * Specify the flex shrink factor, which determines how much the flex item
   * will shrink relative to the rest of the flex items in the flex container.
   */

  .u-md-flexShrink0 {
    flex-shrink: 0 !important;
  }

  .u-md-flexShrink1 {
    flex-shrink: 1 !important;
  }

  .u-md-flexShrink2 {
    flex-shrink: 2 !important;
  }

  .u-md-flexShrink3 {
    flex-shrink: 3 !important;
  }

  .u-md-flexShrink4 {
    flex-shrink: 4 !important;
  }

  .u-md-flexShrink5 {
    flex-shrink: 5 !important;
  }

  /**
   * Aligning with `auto` margins
   * http://www.w3.org/TR/css-flexbox-1/#auto-margins
   */

  .u-md-flexExpand {
    margin: auto !important;
  }

  .u-md-flexExpandLeft {
    margin-left: auto !important;
  }

  .u-md-flexExpandRight {
    margin-right: auto !important;
  }

  .u-md-flexExpandTop {
    margin-top: auto !important;
  }

  .u-md-flexExpandBottom {
    margin-bottom: auto !important;
  }

  /**
   * Basis
   */

  .u-md-flexBasisAuto {
    flex-basis: auto !important;
  }

  .u-md-flexBasis0 {
    flex-basis: 0 !important;
  }

  /*
   * Shorthand
   *
   * Declares all values instead of keywords like 'initial' to work around IE10
   * https://www.w3.org/TR/css-flexbox-1/#flex-common
   *
   * 1. Fixes issue in IE 10 where flex-basis is ignored - https://git.io/vllMt
   *    This ensures it overrides flex-basis set in other utilities.
   */

  /*
   * Sizes the item based on the width/height properties
   */

  .u-md-flexInitial {
    flex: 0 1 auto !important;
    flex-basis: auto !important; /* 1 */
  }

  /*
   * Sizes the item based on the width/height properties, but makes them fully
   * flexible, so that they absorb any free space along the main axis.
   */

  .u-md-flexAuto {
    flex: 1 1 auto !important;
    flex-basis: auto !important; /* 1 */
  }

  /*
   * Sizes the item according to the width/height properties, but makes the flex
   * item fully inflexible. Similar to initial, except that flex items are
   * not allowed to shrink, even in overflow situations.
   */

  .u-md-flexNone {
    flex: 0 0 auto !important;
    flex-basis: auto !important; /* 1 */
  }

}

/**
 * @define utilities
 * Size: breakpoint 3 (large)
 */

@media (min-width: 1024px) {

  /* Applies to flex container
     ======================================================================== */

  /**
   * Container
   */

  .u-lg-flex {
    display: flex !important;
  }

  .u-lg-flexInline {
    display: inline-flex !important;
  }

  /**
   * Direction: row
   */

  .u-lg-flexRow {
    flex-direction: row !important;
  }

  .u-lg-flexRowReverse {
    flex-direction: row-reverse !important;
  }

  /**
   * Direction: column
   */

  .u-lg-flexCol {
    flex-direction: column !important;
  }

  .u-lg-flexColReverse {
    flex-direction: column-reverse !important;
  }

  /**
   * Wrap
   */

  .u-lg-flexWrap {
    flex-wrap: wrap !important;
  }

  .u-lg-flexNoWrap {
    flex-wrap: nowrap !important;
  }

  .u-lg-flexWrapReverse {
    flex-wrap: wrap-reverse !important;
  }

  /**
   * Align items along the main axis of the current line of the flex container
   */

  .u-lg-flexJustifyStart {
    justify-content: flex-start !important;
  }

  .u-lg-flexJustifyEnd {
    justify-content: flex-end !important;
  }

  .u-lg-flexJustifyCenter {
    justify-content: center !important;
  }

  .u-lg-flexJustifyBetween {
    justify-content: space-between !important;
  }

  .u-lg-flexJustifyAround {
    justify-content: space-around !important;
  }

  /**
   * Align items in the cross axis of the current line of the flex container
   * Similar to `justify-content` but in the perpendicular direction
   */

  .u-lg-flexAlignItemsStart {
    align-items: flex-start !important;
  }

  .u-lg-flexAlignItemsEnd {
    align-items: flex-end !important;
  }

  .u-lg-flexAlignItemsCenter {
    align-items: center !important;
  }

  .u-lg-flexAlignItemsStretch {
    align-items: stretch !important;
  }

  .u-lg-flexAlignItemsBaseline {
    align-items: baseline !important;
  }

  /**
   * Aligns items within the flex container when there is extra
   * space in the cross-axis
   *
   * Has no effect when there is only one line of flex items.
   */

  .u-lg-flexAlignContentStart {
    align-content: flex-start !important;
  }

  .u-lg-flexAlignContentEnd {
    align-content: flex-end !important;
  }

  .u-lg-flexAlignContentCenter {
    align-content: center !important;
  }

  .u-lg-flexAlignContentStretch {
    align-content: stretch !important;
  }

  .u-lg-flexAlignContentBetween {
    align-content: space-between !important;
  }

  .u-lg-flexAlignContentAround {
    align-content: space-around !important;
  }

  /* Applies to flex items
     ======================================================================== */

  /**
   * Override default alignment of single item when specified by `align-items`
   */

  .u-lg-flexAlignSelfStart {
    align-self: flex-start !important;
  }

  .u-lg-flexAlignSelfEnd {
    align-self: flex-end !important;
  }

  .u-lg-flexAlignSelfCenter {
    align-self: center !important;
  }

  .u-lg-flexAlignSelfStretch {
    align-self: stretch !important;
  }

  .u-lg-flexAlignSelfBaseline {
    align-self: baseline !important;
  }

  .u-lg-flexAlignSelfAuto {
    align-self: auto !important;
  }

  /**
   * Change order without editing underlying HTML
   */

  .u-lg-flexOrderFirst {
    order: -1 !important;
  }

  .u-lg-flexOrderLast {
    order: 1 !important;
  }

  .u-lg-flexOrderNone {
    order: 0 !important;
  }

  /**
   * Specify the flex grow factor, which determines how much the flex item will
   * grow relative to the rest of the flex items in the flex container.
   *
   * Supports 1-5 proportions
   *
   * 1. Provide all values to avoid IE10 bug with shorthand flex
   *    http://git.io/vllC7
   *
   *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
   *    http://git.io/vllWx
   */

  .u-lg-flexGrow1 {
    flex: 1 1 0% !important; /* 1 */
  }

  .u-lg-flexGrow2 {
    flex: 2 1 0% !important;
  }

  .u-lg-flexGrow3 {
    flex: 3 1 0% !important;
  }

  .u-lg-flexGrow4 {
    flex: 4 1 0% !important;
  }

  .u-lg-flexGrow5 {
    flex: 5 1 0% !important;
  }

  /**
   * Specify the flex shrink factor, which determines how much the flex item
   * will shrink relative to the rest of the flex items in the flex container.
   */

  .u-lg-flexShrink0 {
    flex-shrink: 0 !important;
  }

  .u-lg-flexShrink1 {
    flex-shrink: 1 !important;
  }

  .u-lg-flexShrink2 {
    flex-shrink: 2 !important;
  }

  .u-lg-flexShrink3 {
    flex-shrink: 3 !important;
  }

  .u-lg-flexShrink4 {
    flex-shrink: 4 !important;
  }

  .u-lg-flexShrink5 {
    flex-shrink: 5 !important;
  }

  /**
   * Aligning with `auto` margins
   * http://www.w3.org/TR/css-flexbox-1/#auto-margins
   */

  .u-lg-flexExpand {
    margin: auto !important;
  }

  .u-lg-flexExpandLeft {
    margin-left: auto !important;
  }

  .u-lg-flexExpandRight {
    margin-right: auto !important;
  }

  .u-lg-flexExpandTop {
    margin-top: auto !important;
  }

  .u-lg-flexExpandBottom {
    margin-bottom: auto !important;
  }

  /**
   * Basis
   */

  .u-lg-flexBasisAuto {
    flex-basis: auto !important;
  }

  .u-lg-flexBasis0 {
    flex-basis: 0 !important;
  }

  /*
   * Shorthand
   *
   * Declares all values instead of keywords like 'initial' to work around IE10
   * https://www.w3.org/TR/css-flexbox-1/#flex-common
   *
   * 1. Fixes issue in IE 10 where flex-basis is ignored - https://git.io/vllMt
   *    This ensures it overrides flex-basis set in other utilities.
   */

  /*
   * Sizes the item based on the width/height properties
   */

  .u-lg-flexInitial {
    flex: 0 1 auto !important;
    flex-basis: auto !important; /* 1 */
  }

  /*
   * Sizes the item based on the width/height properties, but makes them fully
   * flexible, so that they absorb any free space along the main axis.
   */

  .u-lg-flexAuto {
    flex: 1 1 auto !important;
    flex-basis: auto !important; /* 1 */
  }

  /*
   * Sizes the item according to the width/height properties, but makes the flex
   * item fully inflexible. Similar to initial, except that flex items are
   * not allowed to shrink, even in overflow situations.
   */

  .u-lg-flexNone {
    flex: 0 0 auto !important;
    flex-basis: auto !important; /* 1 */
  }

}

.card-actions-button {
  cursor: pointer;
  width: 40px;
  height: 40px;
  margin-left: auto;
  @media(min-width: 768px) {
    width: 60px;
    height: 60px;
  }
}

.card-actions-button img {
  width: 10px;
  @media(min-width: 768px) {
    width: auto;
  }
}

.card-actions-dropdown {
  margin-top: -5px;
  margin-right: -1px;
  width: 120px;
  height: 86px;
  border: 1px solid #DBDBDB;
  border-radius: 4px;
  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.18);
  padding-left: 14px;
  text-align: left;
  margin-right: -8px;
  a {
    font-family: 'Roboto Mono', monospace;
    font-weight: bold;
    font-size: 11px;
    color: #6A7C94;
    line-height: 24px;
    letter-spacing: -0.28px;
    &.warning-color {
      color: #FB7977;
    }
    img {
      height: 10px;
      margin-right: 4px;
    }
  }
  @media(min-width: 768px) {
    margin-top: -10px;
    width: 160px;
    height: 114px;
    padding-left: 22px;
    a {
      font-size: 14px;
      line-height: 36px;
      letter-spacing: -0.38px;
    }
    img {
      height: auto;
      margin-right: 8px;
    }
  }
}

.gutter {
  margin-left: -13px;
  margin-right: -13px;
}

.home-heading {
  margin-bottom: 30px;
  @media(min-width: 768px) {
    margin-bottom: 34px;
  }
  &__text {
    font-family: 'Roboto Mono', monospace;
    font-weight: bold;
    font-size: 24px;
    letter-spacing: 0.75px;
    color: #6CC69D;
    border-bottom: 1px solid #6CC69D;
    padding-bottom: 4px;
    @media(min-width: 768px) {
      padding-bottom: 6px;
    }
    img {
      margin: 0 5px 0 10px;
      width: 13px;
      @media(min-width: 768px) {
        margin: 0 6px 0 12px;
        width: auto;
      }
    }
    @media(min-width: 768px) {
      font-size: 32px;
      letter-spacing: 1px;
    }
  }
  &__line {
    border-bottom: 1px solid #DEE0E7;
  }
  &--type2 {
    margin-top: 5px;
    margin-left: 2px;
    margin-right: 2px;
    margin-bottom: 10px;
    @media(min-width: 768px) {
      margin-top: 45px;
      margin-left: 6px;
      margin-right: 6px;
      margin-bottom: 34px;
    }
  }
  &--type2 & {
    &__text {
      letter-spacing: 0.72px;
      @media(min-width: 768px) {
        letter-spacing: -0.09px;
      }
    }
  }
}

.home-featured-curators {
  overflow-x: scroll;
  -webkit-overflow-scrolling: touch;
  margin-right: -20px;
  margin-bottom: 34px;
  &:-webkit-scrollbar {
    display: none;
  }
  @media(min-width: 768px) {
    margin-bottom: 111px;
  }
  @media(min-width: 1024px) {
    overflow-x: auto;
    margin-right: 0;
  }
}

.home-heading-dropdown {
  width: 359px;
  border: 1px solid #F8F8FB;
  box-shadow: 0 1px 2px 0 rgba(0,0,0,0.18);
  border-radius: 2px;
  margin-top: 6px;
  margin-left: -10px;
  padding: 14px 8px 22px 8px;
  @media(min-width: 768px) {
    padding: 14px;
    margin-top: 8px;
    margin-left: 0;
    width: 582px;
    height: 400px;
  }
  &__col1 {
    width: 208px;
  }
  &__col2 {
    width: 157px;
    @media(min-width: 768px) {
      width: 176px;
    }
  }
  &__col3 {

  }
  a {
    padding: 8px 6px;
    font-family: 'Roboto Mono', monospace;
    font-weight: bold;
    font-size: 14px;
    line-height: 16px;
    color: #6A7C94;
    letter-spacing: -0.04px;
    @media(min-width: 768px) {
      padding: 8px;
    }
    &.space-below {
      margin-bottom: 32px;
    }
    &.greyed-out {
      opacity: 0.5;
      color: #b2b4b9;
    }
    &.active {
      color: #2A1E3E;
    }
    div {
      display: inline-block;
      width: 12px;
      margin-right: 12px;
      text-align: center;
      img {
        vertical-align: top;
        margin-top: 2px;
        display: inline;
        &.icon-eye {
          margin-top: 4px;
        }
      }
    }
  }
}

.clickable {
  cursor: pointer;
}

.user-select-none {
  user-select: none;
}

.wallet-stats {
  margin-top: 32px;
  margin-bottom: 35px;
  @media(min-width: 768px) {
    margin-top: 73px;
    margin-bottom: 59px;
  }
  .col1 {
    margin-right: 55px;
    margin-left: 1px;
    @media(min-width: 768px) {
      margin-left: 0;
      margin-right: 115px;
    }
  }
  .col2 {
    margin-right: 72px;
    @media(min-width: 768px) {
      margin-right: 125px;
    }

  }
  .col3 {

  }
  &-label {
    font-family: 'Roboto Mono', monospace;
    color: #6A7C94;
    font-weight: normal;
    font-size: 9px;
    line-height: 11px;
    letter-spacing: 0.38px;
    margin-bottom: 5px;
    white-space: nowrap;
    @media(min-width: 768px) {
      font-size: 12px;
      line-height: 16px;
      letter-spacing: 0.5px;
    }
  }
  &-stat {
    color: #2A1E3E;
    font-weight: bold;
    font-size: 22.5px;
    line-height: 27px;
    letter-spacing: -0.54px;
    @media(min-width: 768px) {
      font-size: 30px;
      line-height: 36px;
      letter-spacing: -0.72px;
    }
    &.green {
      color: #6CC69D;
    }
  }
}

.lists-page-space {
  margin-bottom: 33px;
  @media(min-width: 768px) {
    margin-bottom: 90px;
  }
}

.home-top-margin-bottom {
  @media(min-width: 768px) {
    margin-bottom: 33px;
  }
}

// NEW STUFF

.re-page {
  display: flex;
  flex-direction: column;
  width: 100%;
  margin: 0 auto;
  max-width: 934px;
  padding: 41px 20px 60px 20px;
  @media(min-width: 768px) {
    padding: 105px 20px 125px 20px;
  }
  &--list {
    padding-top: 36px;
    padding-bottom: 70px;
  }
  &--large {
    display: flex;
    flex-direction: column;
    width: 100%;
    margin: 0 auto;
    max-width: 1382px;
    padding: 21px 20px 60px 20px;
    @media(min-width: 768px) {
      padding: 65px 20px 125px 20px;
    }
  }
}

.re-image {
  height: 258px;
  border-radius: 4px;
  margin-bottom: 39px;
}

.re-pre-heading-info {
  display: flex;
  margin-left: 3px;
  > div {
    font-family: 'Roboto Mono', monospace;
    font-size: 9px;
    line-height: 11px;
    letter-spacing: .38px;
    margin-bottom: 3px;
    color: #6A7C94;
    text-transform: uppercase;
    &.re-green {
      color: #6CC69D;
    }
    &.re-lighten {
      color: #B1BBC7;
    }
    @media(min-width: 768px) {
      font-size: 12px;
      line-height: 16px;
      letter-spacing: .5px;
      margin-bottom: 5px;
      margin-right: 12px;
    }
  }
}

.re-heading {
  color: #2A1E3E;
  font-weight: bold;
  font-size: 30px;
  line-height: 36px;
  letter-spacing: -0.72px;
  margin-bottom: 1px;
  @media(min-width: 768px) {
    font-size: 40px;
    line-height: 48px;
    letter-spacing: -0.96px;
    margin-bottom: 0;
    &--list {
      margin-bottom: 8px;
    }
  }
}

.re-subheading {
  color: #9BAABF;
  font-weight: normal;
  font-size: 22.5px;
  line-height: 27px;
  letter-spacing: -.54px;
  margin-bottom: 8px;
  &--button-below {
    margin-bottom: 23px;
  }
  @media(min-width: 768px) {
    font-size: 30px;
    line-height: 36px;
    letter-spacing: -0.72px;
    margin-bottom: 12px;
    &--list {
      font-size: 24px;
      line-height: 29px;
      letter-spacing: -0.56px;
      margin-bottom: 17px;
    }
  }
}

.re-subtext {
  font-family: 'Roboto Mono', monospace;
  font-weight: normal;
  line-height: 14px;
  font-size: 10.5px;
  color: #DEE0E7;
  letter-spacing: 0.38px;
  @media(min-width: 768px) {
    font-size: 14px;
    line-height: 19px;
    letter-spacing: 0.5px;
  }
}

.re-button {
  display: flex;
  justify-content: center;
  align-items: center;
  font-family: 'Roboto Mono', monospace;
  font-weight: bold;
  letter-spacing: 0.5px;
  font-size: 12px;
  line-height: 16px;
  width: 174px;
  height: 42px;
  color: #6CC69D;
  border: 1px solid #6CC69D;
  border-radius: 2px;
  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.18);
  cursor: pointer;
  @media(min-width: 768px) {
    font-size: 16px;
    line-height: 19px;
    letter-spacing: 0.67px;
    width: 232px;
    height: 56px;
    margin-bottom: 12px;
    &--load-more {
      margin-top: 22px;
      width: 212px;
      letter-spacing: 0.5px;
    }
    &--double-line {
      width: 256px;
      line-height: 21px;
      flex-direction: column;
    }
    &--full-width {
      width: 100%;
    }
    &--tall {
      height: 74px;
    }
    &--tall & {
      &__extra-text {
        margin-top: 4px;
      }
    }
    &--grey {
      border: 1px solid #ACB8CA;
      color: #9BAABF;
    }
    &--list-discussion {
      height: 64px;
      padding-left: 10px;
      line-height: 20px;
      margin-bottom: 24px;
    }
    &__extra-text {
      font-family: 'Lato', sans-serif;
      font-weight: normal;
      font-size: 12px;
      line-height: 15px;
      letter-spacing: -0.27px;
    }
  }
}

.re-para {
  font-size: 16px;
  color: #2A1E3E;
  letter-spacing: -0.39px;
  line-height: 24px;
  margin-left: 2px;
  padding-right: 60px;
  margin-bottom: 27px;
}

.re-table {
  width: 100%;
  border-collapse: separate;
  border-spacing: 0;
  thead {
    th {
      font-family: 'Roboto Mono', monospace;
      color: #6A7C94;
      text-transform: uppercase;
      font-weight: normal;
      font-size: 12px;
      line-height: 16px;
      letter-spacing: 0.5px;
      text-align: center;
      white-space: nowrap;
      padding: 10px 6px 20px 6px;
      &.hide-on-small {
        display: none;
      }
      @media(min-width: 768px) {
        &.hide-on-small {
          display: table-cell;
        }
      }
    }
    th:first-of-type {
      text-align: left;
      padding-left: 8px;
    }
    th:last-of-type {
    }
  }
  tbody {
    tr {
      box-shadow: 0 1px 2px 0 rgba(0,0,0,.18);
      border-radius: 4px;
    }
    .re-table-space {
      box-shadow: none;
      border-radius: 0;
      height: 9px;
      @media(min-width: 768px) {
        height: 15px;
      }
    }
    td {
      font-family: 'Roboto Mono', monospace;
      font-size: 14px;
      line-height: 19px;
      color: #6A7C94;
      font-weight: normal;
      letter-spacing: 0.5px;
      border: 1px solid #F8F8FB;
      border-width: 1px 0 1px 0;
      padding: 19px 6px 19px 6px;
      text-align: center;
      &.hide-on-small {
        display: none;
      }
      @media(min-width: 768px) {
        &.hide-on-small {
          display: table-cell;
        }
      }
    }
    tr.list-row-tr {
      box-shadow: none !important;
      td {
        border: none !important;
      }
    }
    td:first-of-type {
      border-width: 1px 0 1px 1px;
      border-bottom-left-radius: 4px;
      border-top-left-radius: 4px;
      padding: 15px 20px 15px 16px;
      max-width: 400px;
      text-align: left;
      @media(min-width: 768px) {
        padding: 19px 32px 19px 23px;
      }
      div {
        font-size: 9px;
        line-height: 11px;
        letter-spacing: .38px;
        margin-bottom: 3px;
        color: #9BAABF;
        &.re-table-green {
          color: #6CC69D;
        }
        @media(min-width: 768px) {
          font-size: 12px;
          line-height: 16px;
          letter-spacing: .5px;
          margin-bottom: 2px;
        }
      }
      h3 {
        font-family: 'Lato', sans-serif;
        color: #2A1E3E;
        font-weight: 700;
        font-size: 18px;
        line-height: 22px;
        letter-spacing: -.43px;
        margin-bottom: 2px;
        @media(min-width: 768px) {
          font-size: 24px;
          line-height: 29px;
          letter-spacing: -.58px;
          margin-bottom: 3px;
        }
      }
      p {
        font-family: 'Lato', sans-serif;
        font-size: 12px;
        line-height: 15px;
        letter-spacing: -.29px;
        word-spacing: .5px;
        margin-bottom: 1px;
        color: #9BAABF;
        @media(min-width: 768px) {
          font-size: 16px;
          line-height: 19px;
          letter-spacing: -.39px;
          margin-bottom: 4px;
        }
      }
    }
    td:last-of-type {
      border-width: 1px 1px 1px 0;
      border-bottom-right-radius: 4px;
      border-top-right-radius: 4px;
    }
  }
  &--list {
    thead {
      th {
        padding-bottom: 12px;
        text-align: left;
        padding-left: 0px;
        padding-right: 32px;
      }
      th:first-of-type {
        padding-left: 6px;
      }
    }
    tbody {
      td {
        height: 115px;
        font-family: 'Lato', sans-serif;
        font-size: 16px;
        line-height: 19px;
        color: #2A1E3E;
        letter-spacing: -0.43px;
        padding-top: 16px;
        padding-bottom: 16px;
        padding-left: 0;
        padding-right: 32px;
        text-align: left;
        .re-table__list-image {
          width: 82px;
          height: 82px;
          border-radius: 10px;
        }
        .re-table-link {
          border: 1px solid #6CC69D;
          padding: 4px;
          font-size: 16px;
          color: #6CC69D;
          line-height: 19px;
          border-radius: 2px;
          letter-spacing: -0.43px;
        }
      }
      td:first-of-type {
        padding-left: 0;
        padding-right: 4px;
        font-family: 'Roboto Mono', monospace;
        font-weight: bold;
        font-size: 14px;
        color: #B1BBC7;
        letter-spacing: -0.39px;
        text-align: center;
        line-height: 19px;
      }
      td:last-of-type {
        padding-right: 6px;
      }
    }
  }
}

.list-page-section-label {
  text-align: center;
  font-family: 'Roboto Mono', monospace;
  font-size: 12px;
  color: #6A7C94;
  letter-spacing: 0.5px;
  text-align: center;
  padding: 20px;
  margin-bottom: 12px;
}

.about-list {
  background: #F8F8FB;
  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.18);
  margin-bottom: 60px;
  &__inner {
    padding: 24px 20px 38px 20px;
    display: flex;
    justify-content: center;
  }
  &__col:first-of-type {
    width: 550px;
    margin-left: 128px;
  }
  &__col:last-of-type {
    width: 550px;
    margin-left: 66px;
  }
  &__item {
    padding: 16px 0 10px 0;
    &__name {
      font-family: 'Roboto Mono', monospace;
      font-size: 12px;
      color: #6A7C94;
      letter-spacing: 0.5px;
      margin-bottom: 6px;
    }
    &__content {
      display: flex;
      white-space: nowrap;
      font-size: 16px;
      color: #697C95;
      letter-spacing: -0.43px;
    }
  }
  &__action {
    font-family: 'Roboto Mono', monospace;
    font-weight: bold;
    font-size: 16px;
    color: #6CC69D;
    letter-spacing: 0.5px;
    padding: 2px 0;
    margin-right: 20px;
  }
  &__part {
    padding: 2px 0;
    margin-right: 8px;
  }
}

.related-lists {
  padding: 0 20px;
  margin-bottom: 60px;
  &__inner {
    border-radius: 4px;
    max-width: 894px;
    border: 1px solid #F8F8FB;
    box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.18);
    padding-bottom: 4px;
    width: 100%;
  }
  &__item {
    width: 48.5%;
    padding: 13px 0px 11px 18px;
    &__name {
      font-size: 20px;
      color: #252442;
      letter-spacing: -.425px;
      line-height: 24px;
      margin-bottom: 3px;
    }
    &__descr {
      font-size: 18px;
      color: #9BAABF;
      letter-spacing: -0.43px;
      line-height: 22px;
    }
    &__staff-pick {
      display: inline-block;
      font-family: 'Roboto Mono', monospace;
      font-size: 12px;
      color: #6CC69D;
      letter-spacing: 0.5px;
      text-align: center;
      margin-left: 6px;
      line-height: 16px;
    }
  }
}

.list-tabs {
  display: flex;
  justify-content: center;
  &__inner {
    max-width: 894px;
    width: 100%;
  }
}

.list-tab-buttons {
  display: flex;
  justify-content: center;
  margin-bottom: 13px;
}

.list-tab-button {
  font-family: 'Roboto Mono', monospace;
  font-size: 12px;
  color: #6A7C94;
  letter-spacing: 0.5px;
  text-align: center;
  line-height: 16px;
  padding: 20px 16px;
  &.active {
    color: #6CC69D;
  }
}

.list-tab-content-audience {
  display: flex;
  flex-wrap: wrap;
  margin: 0 -8px;
  &__card {
    box-shadow: 0 1px 2px 0 rgba(0,0,0,0.18);
    border: 1px solid #DBDBDB;
    border-radius: 4px;
    padding: 0px 9px 6px 9px;
    margin-top: -1px;
    margin-left: 8px;
    margin-right: 8px;
    margin-bottom: 16px;
    flex-grow: 1;
  }
}

.table-scroll {
  overflow-x: auto;
}

.shadowcontainth {
  padding: 0 !important;
}

.shadowcontaintd {
  padding: 0 !important;
  vertical-align: top;
}

.shadowcontain {
  box-shadow: 0 1px 2px 0 rgba(0,0,0,0.18);
  border: 1px solid #F8F8FB;
  position: absolute;
  width: 894px;
  height: 114px;
  border-radius: 4px;
  transform: translateX(-52px);
  pointer-events: none;
}

// table discussion stuff

.discussion-textarea {
  position: relative;
  margin-bottom: 20px;
  textarea {
    background: #FFFFFF;
    box-shadow: 0 1px 2px 0 rgba(0,0,0,0.18);
    border-radius: 4px;
    border: none;
    width: 100%;
    height: 64px;
    padding: 2px 10px;
    letter-spacing: -0.5px;
    outline: none;
  }
  button {
    position: absolute;
    right: 0;
    bottom: 0;
    border: none;
    background: none;
    font-family: 'Roboto Mono', monospace;
    font-weight: bold;
    font-size: 16px;
    color: #6CC69D;
    letter-spacing: 0.67px;
    text-align: center;
    height: 40px;
    padding: 0 6px;
  }
}

.vote-link {
  display: block;
  text-align: center;
  .vote-link__image {
    display: inline-block;
    margin-bottom: 6px;
  }
  .vote-link__image--green {
    display: none;
  }
  div {
    font-family: 'Roboto Mono', monospace;
    color: #6CC69D;
    letter-spacing: -0.29px;
    line-height: 16px;
  }
  &--discussion {
    min-width: 40px;
    margin-top: 14px;
    div {
      font-size: 12px;
    }
    .vote-link__image {
      margin-bottom: 2px;
      height: 16px;
    }
  }
  &--upvoted {
    .vote-link__image {
      display: none;
    }
    .vote-link__image--green {
      display: inline-block;
    }
    div {
      color: #6CC69D !important;
    }
  }
}

.comment-clock {
  font-family: 'Roboto Mono', monospace;
  font-size: 12px;
  color: #DEE0E7;
  letter-spacing: 0.5px;
  line-height: 16px;
  margin-left: auto;
  white-space: nowrap;
  text-transform: uppercase;
  word-spacing: -4px;
  margin-top: 24px;
  margin-right: 6px;
  img {
    margin-right: 6px;
    margin-top: -1px;
  }
}
