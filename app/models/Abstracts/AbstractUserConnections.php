<?php

namespace DS\Model\Abstracts;

/**
 * AbstractUserConnections
 * 
 * @package DS\Model\Abstracts
 * @autogenerated by Phalcon Developer Tools
 * @date 2017-12-11, 19:08:40
 */
abstract class AbstractUserConnections extends \DS\Model\Base
{

    /**
     *
     * @var integer
     * @Primary
     * @Column(type="integer", length=11, nullable=false)
     */
    protected $userId;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $twitter;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $facebook;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $medium;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $dribbble;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $behance;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $github;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $gitlab;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $bitbucket;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $slack;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $angellist;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $googleplus;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $stackoverflow;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $linkedin;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $quora;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $reddit;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $ycombinator;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $instagram;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $visco;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $soundcloud;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $vsco;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $fivehundretpx;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $codepen;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $producthunt;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $discord;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $raspberrypi;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $periscope;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $vimeo;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $twitch;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $patreon;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $youtube;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $deviantart;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $bloglovin;

    /**
     *
     * @var string
     * @Column(type="string", length=200, nullable=true)
     */
    protected $bandcamp;

    /**
     * Method to set the value of field userId
     *
     * @param integer $userId
     * @return $this
     */
    public function setUserId($userId)
    {
        $this->userId = $userId;

        return $this;
    }

    /**
     * Method to set the value of field twitter
     *
     * @param string $twitter
     * @return $this
     */
    public function setTwitter($twitter)
    {
        $this->twitter = $twitter;

        return $this;
    }

    /**
     * Method to set the value of field facebook
     *
     * @param string $facebook
     * @return $this
     */
    public function setFacebook($facebook)
    {
        $this->facebook = $facebook;

        return $this;
    }

    /**
     * Method to set the value of field medium
     *
     * @param string $medium
     * @return $this
     */
    public function setMedium($medium)
    {
        $this->medium = $medium;

        return $this;
    }

    /**
     * Method to set the value of field dribbble
     *
     * @param string $dribbble
     * @return $this
     */
    public function setDribbble($dribbble)
    {
        $this->dribbble = $dribbble;

        return $this;
    }

    /**
     * Method to set the value of field behance
     *
     * @param string $behance
     * @return $this
     */
    public function setBehance($behance)
    {
        $this->behance = $behance;

        return $this;
    }

    /**
     * Method to set the value of field github
     *
     * @param string $github
     * @return $this
     */
    public function setGithub($github)
    {
        $this->github = $github;

        return $this;
    }

    /**
     * Method to set the value of field gitlab
     *
     * @param string $gitlab
     * @return $this
     */
    public function setGitlab($gitlab)
    {
        $this->gitlab = $gitlab;

        return $this;
    }

    /**
     * Method to set the value of field bitbucket
     *
     * @param string $bitbucket
     * @return $this
     */
    public function setBitbucket($bitbucket)
    {
        $this->bitbucket = $bitbucket;

        return $this;
    }

    /**
     * Method to set the value of field slack
     *
     * @param string $slack
     * @return $this
     */
    public function setSlack($slack)
    {
        $this->slack = $slack;

        return $this;
    }

    /**
     * Method to set the value of field angellist
     *
     * @param string $angellist
     * @return $this
     */
    public function setAngellist($angellist)
    {
        $this->angellist = $angellist;

        return $this;
    }

    /**
     * Method to set the value of field googleplus
     *
     * @param string $googleplus
     * @return $this
     */
    public function setGoogleplus($googleplus)
    {
        $this->googleplus = $googleplus;

        return $this;
    }

    /**
     * Method to set the value of field stackoverflow
     *
     * @param string $stackoverflow
     * @return $this
     */
    public function setStackoverflow($stackoverflow)
    {
        $this->stackoverflow = $stackoverflow;

        return $this;
    }

    /**
     * Method to set the value of field linkedin
     *
     * @param string $linkedin
     * @return $this
     */
    public function setLinkedin($linkedin)
    {
        $this->linkedin = $linkedin;

        return $this;
    }

    /**
     * Method to set the value of field quora
     *
     * @param string $quora
     * @return $this
     */
    public function setQuora($quora)
    {
        $this->quora = $quora;

        return $this;
    }

    /**
     * Method to set the value of field reddit
     *
     * @param string $reddit
     * @return $this
     */
    public function setReddit($reddit)
    {
        $this->reddit = $reddit;

        return $this;
    }

    /**
     * Method to set the value of field ycombinator
     *
     * @param string $ycombinator
     * @return $this
     */
    public function setYcombinator($ycombinator)
    {
        $this->ycombinator = $ycombinator;

        return $this;
    }

    /**
     * Method to set the value of field instagram
     *
     * @param string $instagram
     * @return $this
     */
    public function setInstagram($instagram)
    {
        $this->instagram = $instagram;

        return $this;
    }

    /**
     * Method to set the value of field visco
     *
     * @param string $visco
     * @return $this
     */
    public function setVisco($visco)
    {
        $this->visco = $visco;

        return $this;
    }

    /**
     * Method to set the value of field soundcloud
     *
     * @param string $soundcloud
     * @return $this
     */
    public function setSoundcloud($soundcloud)
    {
        $this->soundcloud = $soundcloud;

        return $this;
    }

    /**
     * Method to set the value of field vsco
     *
     * @param string $vsco
     * @return $this
     */
    public function setVsco($vsco)
    {
        $this->vsco = $vsco;

        return $this;
    }

    /**
     * Method to set the value of field fivehundretpx
     *
     * @param string $fivehundretpx
     * @return $this
     */
    public function setFivehundretpx($fivehundretpx)
    {
        $this->fivehundretpx = $fivehundretpx;

        return $this;
    }

    /**
     * Method to set the value of field codepen
     *
     * @param string $codepen
     * @return $this
     */
    public function setCodepen($codepen)
    {
        $this->codepen = $codepen;

        return $this;
    }

    /**
     * Method to set the value of field producthunt
     *
     * @param string $producthunt
     * @return $this
     */
    public function setProducthunt($producthunt)
    {
        $this->producthunt = $producthunt;

        return $this;
    }

    /**
     * Method to set the value of field discord
     *
     * @param string $discord
     * @return $this
     */
    public function setDiscord($discord)
    {
        $this->discord = $discord;

        return $this;
    }

    /**
     * Method to set the value of field raspberrypi
     *
     * @param string $raspberrypi
     * @return $this
     */
    public function setRaspberrypi($raspberrypi)
    {
        $this->raspberrypi = $raspberrypi;

        return $this;
    }

    /**
     * Method to set the value of field periscope
     *
     * @param string $periscope
     * @return $this
     */
    public function setPeriscope($periscope)
    {
        $this->periscope = $periscope;

        return $this;
    }

    /**
     * Method to set the value of field vimeo
     *
     * @param string $vimeo
     * @return $this
     */
    public function setVimeo($vimeo)
    {
        $this->vimeo = $vimeo;

        return $this;
    }

    /**
     * Method to set the value of field twitch
     *
     * @param string $twitch
     * @return $this
     */
    public function setTwitch($twitch)
    {
        $this->twitch = $twitch;

        return $this;
    }

    /**
     * Method to set the value of field patreon
     *
     * @param string $patreon
     * @return $this
     */
    public function setPatreon($patreon)
    {
        $this->patreon = $patreon;

        return $this;
    }

    /**
     * Method to set the value of field youtube
     *
     * @param string $youtube
     * @return $this
     */
    public function setYoutube($youtube)
    {
        $this->youtube = $youtube;

        return $this;
    }

    /**
     * Method to set the value of field deviantart
     *
     * @param string $deviantart
     * @return $this
     */
    public function setDeviantart($deviantart)
    {
        $this->deviantart = $deviantart;

        return $this;
    }

    /**
     * Method to set the value of field bloglovin
     *
     * @param string $bloglovin
     * @return $this
     */
    public function setBloglovin($bloglovin)
    {
        $this->bloglovin = $bloglovin;

        return $this;
    }

    /**
     * Method to set the value of field bandcamp
     *
     * @param string $bandcamp
     * @return $this
     */
    public function setBandcamp($bandcamp)
    {
        $this->bandcamp = $bandcamp;

        return $this;
    }

    /**
     * Returns the value of field userId
     *
     * @return integer
     */
    public function getUserId()
    {
        return $this->userId;
    }

    /**
     * Returns the value of field twitter
     *
     * @return string
     */
    public function getTwitter()
    {
        return $this->twitter;
    }

    /**
     * Returns the value of field facebook
     *
     * @return string
     */
    public function getFacebook()
    {
        return $this->facebook;
    }

    /**
     * Returns the value of field medium
     *
     * @return string
     */
    public function getMedium()
    {
        return $this->medium;
    }

    /**
     * Returns the value of field dribbble
     *
     * @return string
     */
    public function getDribbble()
    {
        return $this->dribbble;
    }

    /**
     * Returns the value of field behance
     *
     * @return string
     */
    public function getBehance()
    {
        return $this->behance;
    }

    /**
     * Returns the value of field github
     *
     * @return string
     */
    public function getGithub()
    {
        return $this->github;
    }

    /**
     * Returns the value of field gitlab
     *
     * @return string
     */
    public function getGitlab()
    {
        return $this->gitlab;
    }

    /**
     * Returns the value of field bitbucket
     *
     * @return string
     */
    public function getBitbucket()
    {
        return $this->bitbucket;
    }

    /**
     * Returns the value of field slack
     *
     * @return string
     */
    public function getSlack()
    {
        return $this->slack;
    }

    /**
     * Returns the value of field angellist
     *
     * @return string
     */
    public function getAngellist()
    {
        return $this->angellist;
    }

    /**
     * Returns the value of field googleplus
     *
     * @return string
     */
    public function getGoogleplus()
    {
        return $this->googleplus;
    }

    /**
     * Returns the value of field stackoverflow
     *
     * @return string
     */
    public function getStackoverflow()
    {
        return $this->stackoverflow;
    }

    /**
     * Returns the value of field linkedin
     *
     * @return string
     */
    public function getLinkedin()
    {
        return $this->linkedin;
    }

    /**
     * Returns the value of field quora
     *
     * @return string
     */
    public function getQuora()
    {
        return $this->quora;
    }

    /**
     * Returns the value of field reddit
     *
     * @return string
     */
    public function getReddit()
    {
        return $this->reddit;
    }

    /**
     * Returns the value of field ycombinator
     *
     * @return string
     */
    public function getYcombinator()
    {
        return $this->ycombinator;
    }

    /**
     * Returns the value of field instagram
     *
     * @return string
     */
    public function getInstagram()
    {
        return $this->instagram;
    }

    /**
     * Returns the value of field visco
     *
     * @return string
     */
    public function getVisco()
    {
        return $this->visco;
    }

    /**
     * Returns the value of field soundcloud
     *
     * @return string
     */
    public function getSoundcloud()
    {
        return $this->soundcloud;
    }

    /**
     * Returns the value of field vsco
     *
     * @return string
     */
    public function getVsco()
    {
        return $this->vsco;
    }

    /**
     * Returns the value of field fivehundretpx
     *
     * @return string
     */
    public function getFivehundretpx()
    {
        return $this->fivehundretpx;
    }

    /**
     * Returns the value of field codepen
     *
     * @return string
     */
    public function getCodepen()
    {
        return $this->codepen;
    }

    /**
     * Returns the value of field producthunt
     *
     * @return string
     */
    public function getProducthunt()
    {
        return $this->producthunt;
    }

    /**
     * Returns the value of field discord
     *
     * @return string
     */
    public function getDiscord()
    {
        return $this->discord;
    }

    /**
     * Returns the value of field raspberrypi
     *
     * @return string
     */
    public function getRaspberrypi()
    {
        return $this->raspberrypi;
    }

    /**
     * Returns the value of field periscope
     *
     * @return string
     */
    public function getPeriscope()
    {
        return $this->periscope;
    }

    /**
     * Returns the value of field vimeo
     *
     * @return string
     */
    public function getVimeo()
    {
        return $this->vimeo;
    }

    /**
     * Returns the value of field twitch
     *
     * @return string
     */
    public function getTwitch()
    {
        return $this->twitch;
    }

    /**
     * Returns the value of field patreon
     *
     * @return string
     */
    public function getPatreon()
    {
        return $this->patreon;
    }

    /**
     * Returns the value of field youtube
     *
     * @return string
     */
    public function getYoutube()
    {
        return $this->youtube;
    }

    /**
     * Returns the value of field deviantart
     *
     * @return string
     */
    public function getDeviantart()
    {
        return $this->deviantart;
    }

    /**
     * Returns the value of field bloglovin
     *
     * @return string
     */
    public function getBloglovin()
    {
        return $this->bloglovin;
    }

    /**
     * Returns the value of field bandcamp
     *
     * @return string
     */
    public function getBandcamp()
    {
        return $this->bandcamp;
    }

    /**
     * Initialize method for model.
     */
    public function initialize()
    {
        $this->setSchema("spreadshare");
        $this->setSource("userConnections");
        $this->belongsTo('userId', 'DS\Model\Abstracts\User', 'id', ['alias' => 'User']);
    }

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource()
    {
        return 'userConnections';
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return AbstractUserConnections[]|AbstractUserConnections|\Phalcon\Mvc\Model\ResultSetInterface
     */
    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return AbstractUserConnections|\Phalcon\Mvc\Model\ResultInterface
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }

}
